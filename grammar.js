module.exports = grammar({
  name: "x86asm",

  rules: {
    source_file: ($) => $.toplevel_item,

    toplevel_item: ($) => repeat1($.statement),

    statement: ($) => seq(choice($.comment, $.directive), $._NEWLINE),

    comment: ($) => /;.*/,
    directive: ($) => choice($.section, $.extern, $.global, $.label, $.ins),

    section: ($) => seq("section", $.section_name),
    extern: ($) => seq("extern", $._IDENTIFIER),
    global: ($) => seq("global", $._IDENTIFIER),
    label: ($) => seq($._IDENTIFIER, ":", optional($.directive)),
    ins: ($) => seq($.ins_kw, $.operand_args),

    width: ($) => choice("byte", "word", "dword", "qword"),

    operand_args: ($) => seq($.operand, repeat(seq(",", $.operand))),

    operand: ($) =>
      seq(
        optional($.width),
        choice(
          $.register,
          $.effective_addr,
          $.integer_literal,
          $.operand_ident,
        ),
      ),

    register: ($) =>
      // TODO: add missing registers
      choice(
        $.register_8bit,
        $.register_16bit,
        $.register_32bit,
        $.register_64bit,
        $.register_simd,
      ),

    register_8bit: ($) =>
      choice("ah", "bh", "ch", "dh", "al", "bl", "cl", "dl"),

    register_16bit: ($) =>
      choice("ax", "bx", "cx", "dx", "di", "si", "sp", "bp"),

    register_32bit: ($) =>
      choice("eax", "ebx", "ecx", "edx", "edi", "esi", "esp", "ebp"),

    register_64bit: ($) =>
      choice(
        choice("rax", "rbx", "rcx", "rdx", "rdi", "rsi", "rsp", "rbp"),
        choice("r8", "r9", "r10", "r11", "r12", "r13", "r14", "r15"),
      ),

    register_simd: ($) =>
      choice(
        choice("xmm0", "xmm1", "xmm2", "xmm3", "xmm4", "xmm5", "xmm6", "xmm7"),
        choice("ymm0", "ymm1", "ymm2", "ymm3", "ymm4", "ymm5", "ymm6", "ymm7"),
      ),

    operand_ident: ($) => $._IDENTIFIER,

    effective_addr: ($) => seq("[", /[^]]*/, "]"),

    integer_literal: ($) =>
      choice(
        $._decimal_literal,
        $._octal_literal,
        $._hex_literal,
        $._binary_literal,
      ),

    // decimal_literal: DECIMAL_NUMBER
    _decimal_literal: ($) => $._DECIMAL_NUMBER,

    // DECIMAL_NUMBER: /[1-9][0-9]*/
    _DECIMAL_NUMBER: ($) => /[0-9]+/,

    // octal_literal: "0o" OCTAL_NUMBER
    _octal_literal: ($) => seq("0o", $._OCTAL_NUMBER),

    // OCTAL_NUMBER: /[0-7]+/
    _OCTAL_NUMBER: ($) => /[0-7]+/,

    // hex_literal: "0x" HEX_NUMBER
    _hex_literal: ($) => seq(choice("0x", "0h"), $._HEX_NUMBER),

    // HEX_NUMBER: /[a-fA-F0-9]+/
    _HEX_NUMBER: ($) => /[a-fA-F0-9]+/,

    _binary_literal: ($) => seq("0b", $._BINARY_NUMBER),
    _BINARY_NUMBER: ($) => /[01]+/,

    section_name: ($) => /[.]\S+/,
    _IDENTIFIER: ($) => /[A-Za-z0-9.@_-]+/,

    _NEWLINE: ($) => seq(optional($.comment), choice("\n", "\r\n")),

    ins_kw: ($) => choice($.ins_8086, $.ins_80186),

    ins_8086: ($) =>
      choice(
        "aaa",
        "aad",
        "aam",
        "aas",
        "adc",
        "add",
        "and",
        "call",
        "cbw",
        "clc",
        "cld",
        "cli",
        "cmc",
        "cmp",
        "cmpsb",
        "cmpsw",
        "cwd",
        "daa",
        "das",
        "dec",
        "div",
        "esc",
        "hlt",
        "idiv",
        "imul",
        "in",
        "inc",
        "int",
        "into",
        "iret",
        "jcc",
        "jczx",
        "jmp",
        "lahf",
        "lds",
        "lea",
        "les",
        "lock",
        "lodsb",
        "lodsw",
        choice("loop", "loope", "loopne", "loopnz", "loopz"),
        "mov",
        "movsb",
        "movsw",
        "mul",
        "neg",
        "nop",
        "not",
        "or",
        "out",
        "pop",
        "popf",
        "push",
        "pushf",
        "rcl",
        "rcr",
        choice("rep", "repe", "repne", "repnz", "repz"),
        "ret",
        "retn",
        "retf",
        "rol",
        "ror",
        "sahf",
        "sal",
        "sar",
        "sbb",
        "scasb",
        "scasw",
        "shl",
        "shr",
        "stc",
        "std",
        "sti",
        "stosb",
        "stosw",
        "sub",
        "test",
        "wait",
        "xchg",
        "xlat",
        "xor",
      ),

    ins_80186: ($) =>
      choice(
        "bound",
        "enter",
        "insb",
        "insw",
        "leave",
        "outsb",
        "outsw",
        "popa",
        "pusha",
      ),

    ins_80286: ($) =>
      choice(
        "arpl",
        "clts",
        "lar",
        "lsl",
        "lgdt",
        "lidt",
        "lldt",
        "ltr",
        "lmsw",
        "sgdt",
        "sidt",
        "sldt",
        "smsw",
        "str",
        "verr",
        "verw",
        "loadall",
      ),

    ins_80386: ($) =>
      choice(
        "bsf",
        "bsr",
        "bt",
        "btc",
        "btr",
        "bts",
        "cdq",
        "cmpsd",
        "cwde",
        "ibts",
        "imul",
        "insd",
        "iretd",
        "jecxz",
        "lfs",
        "lgs",
        "lss",
        "lodsd",
        "loopw",
        "loopd",
        "movsd",
        "movsx",
        "movzx",
        "outsd",
        "popad",
        "popfd",
        "pushad",
        "pushfd",
        "pushd",
        "scasd",
        choice(
          "seta",
          "setae",
          "setb",
          "setbe",
          "setc",
          "sete",
          "setg",
          "setge",
          "setl",
          "setle",
          "setna",
          "setnae",
          "setnb",
          "setnbe",
          "setnc",
          "setne",
          "setng",
          "setnge",
          "setnl",
          "setnle",
          "setno",
          "setnp",
          "setns",
          "setnz",
          "seto",
          "setp",
          "setpe",
          "setpo",
          "sets",
          "setz",
        ),
        "shld",
        "shrd",
        "stosd",
        "xbts",
      ),

    ins_80486: ($) =>
      choice("bswap", "cmpxchg", "invd", "invlpg", "wbinvd", "xadd"),

    ins_pentium: ($) =>
      choice("cpuid", "cmpxchg8b", "rdmsr", "rdtsc", "wrmsr", "rsm"),

    ins_pentium_mmx: ($) => choice("rdpmc"),

    ins_amd_k6: ($) => choice("syscall", "sysret"),

    ins_pentium_pro: ($) =>
      choice(
        choice(
          "cmova",
          "cmovae",
          "cmovb",
          "cmovbe",
          "cmovc",
          "cmove",
          "cmovg",
          "cmovge",
          "cmovl",
          "cmovle",
          "cmovna",
          "cmovnae",
          "cmovnb",
          "cmovnbe",
          "cmovnc",
          "cmovne",
          "cmovng",
          "cmovnge",
          "cmovnl",
          "cmovnle",
          "cmovno",
          "cmovnp",
          "cmovns",
          "cmovnz",
          "cmovo",
          "cmovp",
          "cmovpe",
          "cmovpo",
          "cmovs",
          "cmovz",
        ),
        "ud2",
        "nop",
      ),

    ins_pentium_2: ($) => choice("sysenter", "sysexit"),

    ins_sse_non_smid: ($) => choice(/prefetcht[012]/, "prefetchnta", "sfence"),

    ins_sse2: ($) => choice("clflush", "lfence", "mfence", "movnti", "pause"),

    ins_sse3: ($) => choice("monitor", "mwait"),

    ins_sse4_2: ($) => choice("crc32"),

    ins_x86_64: ($) =>
      choice(
        "cdqe",
        "cqo",
        "cmpsq",
        "cmpxchg16b",
        "iretq",
        "jrcxz",
        "lodsq",
        "movxsd",
        "popfq",
        "pushfq",
        "rdtscp",
        "scasq",
        "stosq",
        "swapgs",
      ),

    ins_bitmanip: ($) =>
      choice(
        "lzcnt",
        "popcnt",
        "andn",
        "bextr",
        "blsi",
        "blsmsk",
        "blsr",
        "tzcnt",
        "bzhi",
        "mulx",
        "pdep",
        "pext",
        "rorx",
        "sarx",
        "shrx",
        "shlx",
        "bextr",
        "blcfill",
        "blci",
        "blcic",
        "blcmsk",
        "blcs",
        "blsfill",
        "blsic",
        "t1mskc",
        "tzmsk",
      ),

    ins_clmul: ($) =>
      choice(
        "pclmulqdq",
        "pclmullqlqdq",
        "pclmulhqlqdq",
        "pclmullqhqdq",
        "pclmulhqhqdq",
      ),

    ins_adx: ($) => choice("adcx", "adox"),

    ins_intel_tsx: ($) =>
      choice("xbegin", "xend", "xabort", "xacquire", "xrelease"),

    ins_intel_mpx: ($) =>
      choice(
        "bmdmk",
        "bndcl",
        "bndcu",
        "bndcn",
        "bmdmov",
        "bndldx",
        "bndstx",
        "bnd",
      ),

    ins_intel_cet: ($) =>
      choice(
        "incsspd",
        "incsspq",
        "rdsspd",
        "rdsspq",
        "saveprevssp",
        "rstorssp",
        "wrssd",
        "wrssq",
        "wrussd",
        "wrussq",
        "setssbsy",
        "clrssbsy",
        "endbr32",
        "endbr64",
      ),

    ins_8087: ($) =>
      choice(
        "f2xm1",
        "fabs",
        "fadd",
        "faddp",
        "fbld",
        "fbstp",
        "fchs",
        "fclex",
        "fcom",
        "fcomp",
        "fcompp",
        "fdecstp",
        "fdisi",
        "fdiv",
        "fdivp",
        "fdivr",
        "fdivrp",
        "feni",
        "ffree",
        "fiadd",
        "ficom",
        "ficomp",
        "fidiv",
        "fidivr",
        "fild",
        "fimul",
        "fincstp",
        "finit",
        "fist",
        "fistp",
        "fisub",
        "fisubr",
        "fld",
        "fld1",
        "fldcw",
        "fldenv",
        "fldenvw",
        "fldl2e",
        "fldl2t",
        "fldlg2",
        "fldln2",
        "fldpi",
        "fldz",
        "fmul",
        "fmulp",
        "fnclex",
        "fndisi",
        "fneni",
        "fninit",
        "fnop",
        "fnsave",
        "fnsavew",
        "fnstcw",
        "fnstenv",
        "fnstenvw",
        "fnstsw",
        "fpatan",
        "fprem",
        "fptan",
        "frndint",
        "frstor",
        "frstorw",
        "fsave",
        "fsavew",
        "fscale",
        "fsqrt",
        "fst",
        "fstcw",
        "fstenv",
        "fstenvw",
        "fstp",
        "fstsw",
        "fsub",
        "fsubp",
        "fsubr",
        "fsubrp",
        "ftst",
        "fwait",
        "fxam",
        "fxch",
        "fxtract",
        "fyl2x",
        "fyl2xp1",
      ),

    ins_80287: ($) => choice("fsetpm", "fstsw"),

    ins_80387: ($) =>
      choice(
        "fldenvd",
        "fsaved",
        "fprem1",
        "frstord",
        "fsin",
        "fcos",
        "fsincos",
        "fstenvd",
        "fucom",
        "fucomp",
        "fucompp",
        "frstpm",
        "fnstdw",
        "fnstsg",
        /fsbp[0123]/,
        "f4x4",
        "fmul4x4",
        "ftstp",
        "frint2",
        "frichop",
        "frinear",
      ),

    ins_pentium_pro: ($) =>
      choice(
        "fcmovb",
        "fcmovbe",
        "fcmove",
        "fcmovnb",
        "fcmovnbe",
        "fcmovne",
        "fcmovnu",
        "fcmovu",
        "fcomi",
        "fcomip",
        "fucomi",
        "fucomip",
      ),

    ins_sse: ($) => choice("fxrstor", "fxsave"),

    ins_sse3: ($) => choice("fisttp"),

    ins_mmx: ($) =>
      choice(
        "emms",
        "movd",
        "movq",
        "packssdw",
        "packsswb",
        "packuswb",
        /padd[bwdq]/,
        /padds[bwdq]/,
        "pand",
        "pandn",
        "por",
        "pxor",
        /pcmpeq[bwd]/,
        /pcmpgt[bwd]/,
        "pmaddwd",
        "pmulhw",
        "pmullw",
        /pssl[wdq]/,
        /psra[dw]/,
        /psrl[dwq]/,
        /psub[bwd]/,
        /psubs[bw]/,
        /psubus[bw]/,
        "punpckhwd",
        "punpckhdq",
        "punpcklbw",
        "punpcklwd",
        "punpckldq",
      ),

    ins_mmx_plus_and_sse: ($) =>
      choice(
        "maskmovq",
        "movntq",
        "pshufw",
        "pinsrw",
        "pextrw",
        "pmovmskb",
        "pminub",
        "pmaxub",
        "pavgb",
        "pavgw",
        "pmulhuw",
        "pminsw",
        "pmaxsw",
        "psadbw",
      ),

    ins_mmx_sse2: ($) =>
      choice(
        "psignb",
        "psignw",
        "psignd",
        "pshufb",
        "pmulhrsw",
        "pmaddubsw",
        "phsubw",
        "phsubsw",
        "phsubd",
        "phaddsw",
        "phaddw",
        "phaddd",
        "palignr",
        "pabsb",
        "pabsw",
        "pbasd",
      ),

    ins_3dnow: ($) =>
      choice(
        "femms",
        "pavgusb",
        "pf2id",
        "pfacc",
        "pfadd",
        "pfcmpeq",
        "pfcmpge",
        "pfcmpgt",
        "pfmax",
        "pfmin",
        "pfmul",
        "pfrcp",
        "pfrcpit1",
        "pfrcpit2",
        "pfrsqit1",
        "pfrsqrt",
        "pfsub",
        "pfsubr",
        "pi2fd",
        "pmulhrw",
        "prefetch",
        "prefetchw",
      ),

    ins_3dnow_plus: ($) =>
      choice("pf2iw", "pi2fw", "pswapd", "pfnacc", "pfpnacc"),

    ins_geode_gx: ($) =>
      choice("pfrcpv", "pfrqsrtv")

    ins_sse_pentium3: ($) =>
      choice(
        "andps",
        "andnps",
        "orps",
        "xorps",
        "movups",
        "movss",
        "movlps",
        "movhlps",
        "unpcklps",
        "unpckhps",
        "movhps",
        "movlhps",
        "movaps",
        "movntps",
        "movmskps",
        "cvtpi2ps",
        "cvtsi2ss",
        "cvttps2pi",
        "cvttss2si",
        "cvtps2pi",
        "cvtss2si",
        "ucomiss",
        "comiss",
        "sqrtps",
        "sqrtss",
        "rsqrtps",
        "rcpps",
        "rcpss",
        "addps",
        "addss",
        "mulps",
        "mulss",
        "subps",
        "subss",
        "minps",
        "minss",
        "divps",
        "divss",
        "maxps",
        "maxss",
        "ldmxcsr",
        "stmxcsr",
        "cmpps",
        "shufps",
      ),

    ins_sse2_pentium4: ($) =>
      choice(
        "movapd",
        "movntpd",
        "movhpd",
        "movhpd",
        "movlpd",
        "movupd",
        "movmskpd",
        "movsd",
        "addpd",
        "addsd",
        "divpd",
        "divsd",
        "maxpd",
        "maxsd",
        "minpd",
        "minsd",
        "mulpd",
        "mulsd",
        "sqrtpd",
        "sqrtsd",
        "subpd",
        "subsd"
        "andpd",
        "andnpd",
        "orpd",
        "xorpd",
        "cmppd",
        "cmpsd",
        "comisd",
        "ucomisd",
        "shufpd",
        "unpckhpd",
        "unpcklpd",
        "cvtdq2pd",
        "cvtdq2ps",
        "cvtpd2dq",
        "cvtpd2pi",
        "cvtpd2ps",
        "cvtpi2pd",
        "cvtps2dq",
        "cvtps2pd",
        "cvtsd2si",
        "cvtsd2ss",
        "cvtsi2sd",
        "cvtss2sd",
        "cvttpd2dq",
        "cvttpd2pi",
        "cvttps2dq",
        "cvttsd2si",
        "pmovmskb",
        "pextrw",
        "pinsrw",
        "packssdw",
        "packsswb",
        "packuswb",
        /padd[bwdq]/,
        /padds[bw]/,
        /paddus[bw]/,
        "pand",
        "pandn",
        "por",
        "pxor",
        /pcmpeq[bwd]/,
        /pcmpgt[bwd]/,
        "pmullw",
        "pmulhw",
        "pmulhuw",
        "pmuludq",
        /pssl[wdq]/,
        /psra[dw]/,
        /psrl[dwq]/,
        /psub[bwdq]/,
        /psubs[bw]/,
        "pmaddwd",
        /psubus[bw]/,
        "punpckhbw",
        "punpckhwd",
        "punpckhdq",
        "punpcklbw",
        "punpcklwd",
        "punpckldq",
        "pavgb",
        "pavgw",
        "pminub",
        "pminsw",
        "pmaxsw",
        "pmaxub",
        "psadbw",
        "maskmovdqu",
        "movdq2q",
        "movdqa",
        "movdqu",
        "movq2dq",
        "movntdq",
        "pshufhw",
        "pshuflw",
        "pshufd",
        "pslldq",
        "psrldq",
        "punpckhqdq",
        "punpcklqdq",
      ),

    ins_sse3_pentium4: ($) =>
      choice(
        "addsubps",
        "addsubpd",
        "movddup",
        "movsldup",
        "movshdup",
        "haddps",
        "haddpd",
        "hsubps",
        "hsubpd",
        "lddqu",
      ),

    ins_sse3_core2: ($) =>
      choice(
        "psignb",
        "psignw",
        "psignd",
        "pshufb",
        "pmulhrsw",
        "pmaddubsw",
        "phsubw",
        "phsubsw",
        "phsubd",
        "phaddsw",
        "phaddw",
        "phaddd",
        "palignr",
        "pabsb",
        "pabsw",
        "pabsd",
      ),

    ins_sse4_1: ($) =>
      choice(
        "dpps",
        "dppd",
        "blendps",
        "blendvps",
        "blendpd",
        "blendvpd",
        "roundps",
        "roundss",
        "roundpd",
        "roundsd",
        "insertps",
        "extractps",
        "mpsadbw",
        "phminposuw",
        "pmulld",
        "pmuldq",
        "pblendvb",
        "pblendw",
        "pminsb",
        "pminuw",
        "pminsd",
        "pminud",
        "pmaxsb",
        "pmaxuw",
        "pmaxsd",
        "pmaxud",
        "pinsrb",
        "pinsrd",
        "pinsrq",
        "pextrb",
        "pextrw",
        "pextrd",
        "pextrq",
        "pmovsxbw",
        "pmovzxbw",
        "pmovsxbd",
        "pmovzxbd",
        "pmovsxbq",
        "pmovzxbq",
        "pmovsxwd",
        "pmovzxwd",
        "pmovsxwq",
        "pmovzxwq",
        "pmovsxdq",
        "pmovzxdq",
        "ptest",
        "pcmpeqq",
        "packusdw",
        "monvtdqa",
      ),

    ins_sse4a: ($) =>
      choice(
        "extrq",
        "insertq",
        "movntsd",
        "movntss",
      ),

    ins_sse_4_2_nehalem: ($) =>
      choice(
        "pcmpestri",
        "pcmpestrm",
        "pcmpistri",
        "pcmpistrm",
        "pcmpgtq",
      ),

    ins_f16c: ($) =>
      choice(
        "vcvtph2ps",
        "vcvtps2ph",
      ),

    ins_fma3: ($) => /vf(n?)m(add|addsub|sub|subadd)(132|213|231)(pd|ps|sd|ss)/,

    ins_fma4: ($) => /vf(n?)m(add|addsub|subadd|sub)(pd|ps|sd|ss)/,

    ins_avx: ($) =>
      choice(
        /vbroadcast(ss|sd|f128)/,
        "vinsertf128",
        "vextractf128",
        /vmaskmov(ps|pd)/,
        /vpermil(ps|pd)/,
        "vperm2f128",
        "vzeroall",
        "vzeroupper",
      ),

    ins_avx2: ($) =>
      choice(
        /vbroadcast(ss|sd)/,
        /vpbroadcast[bwdq]/,
        "vbroadcasti128",
        "vinserti128",
        "vextracti128",
        /vgather(dpd|qpd|dps|qps)/,
        /vpgather(dd|dq|qd|qq)/,
        /vpmaskmov[dq]/,
        /vper(mps|md|mpd|mq|m2i128)/,
        "vpblendd",
        /vps(llvd|llvq|rlvd|rlvq|ravd)/
      ),

    ins_avx512: ($) =>
      choice(
        /vblendm(pd|ps)/,
        /vpblend(md|mq)/,
        /vpcmp(u?)d/,
        /vpcmp(i?)q/,
        /vptest(n?)(md|mq)/,
        /vcompress(pd|ps)/,
        /vpcompress[dq]/,
        /vexpand(pd|ps)/,
        /vpexpand[dq]/,
        /vpermi2(pd|ps)/,
        /vpermi2[dq]/,
        /vpermt2(ps|pd|d|q)/,
        /vshuff(i?)(32x4|64x2)/,
        /vpternlog[dq]/,
        /vpmov(u?)(s?)q[dwb]/,
        /vpmov(u?)(s?)d[wb]/,
        /vcv(t?)(ps|pd)2udq/,
        /vcvtudq2(ps|pd)/,
        /vcvtusi2(ps|pd|sd|ss)/,
        /vcvtqq2(pd|ps)/,
        /vgetexp(pd|ps|sd|ss)/,
        /vgetmant(pd|ps|sd|ss)/,
        /vfixupimm(pd|ps|sd|ss)/,
        /vrcp14(pd|ps|sd|ss)/,
        /vrndscale(pd|ps|sd|ss)/,
        /vrsqrt14(pd|ps|sd|ss)/,
        /vscalef(pd|ps|sd|ss)/,
        /valign[dq]/,
        "vpabsq",
        /vpmax(sq|uq)/,
        /vpmin(sq|uq)/,
        /vpro[lr](v?)[dq]/,
        /vpscatter(dd|dq|qd|qq)/,
        /vscatter(dpd|dps|qps|qpd)/,
      ),

    ins_intel_aes: ($) =>
      choice(
        "aesenc",
        "aesenclast",
        "aesdec",
        "aesdeclast",
        "aeskeygenassist",
        "aesimc",
      ),

    ins_rdrand: ($) =>
      choice(
        "rdrand",
        "rdseed",
      ),

    ins_intel_sha: ($) =>
      choice(
        "sha1rnds4",
        "sha1nexte",
        "sha1msg1",
        "sha1msg2",
        "sha256rnds2",
        "sha256msg1",
        "sha256msg2",
      ),

    ins_virt_amd_v: ($) =>
      choice(
        "clgi",
        "invlpga",
        "skinit",
        "stgi",
        "vmload",
        "vmmcall",
        "vmrun",
        "vmsave",
      ),

    ins_virt_vt_x: ($) =>
      choice(
        "invept",
        "invvpid",
        "vmfunc",
        "vmptrld",
        "vmptrst",
        "vmclear",
        "vmread",
        "vmwrite",
        "vmcall",
        "vmlaunch",
        "vmresume",
        "vmxoff",
        "vmxon",
      )

    ins_undoc: ($) =>
      choice(
        "aam",
        "aad",
        "salc",
        "setalc",
        "test",
        "shl",
        "sal",
        "repnz",
        seq("rep", "ret"),
        "icebp",
        "int1",
        "ud1",
        "ud0",
        "saveall",
        "storeall",
        "loadall",
        "loadalld",
        "cl1invmb",
        "patch2",
        "patch3",
        "umov",
        "scall",
        "nxop",
        "pswapw",
        "altinst",
        seq("rep", "xsha512"),
        seq("rep", "xmodexp"),
        "xrng2",
        "montmul2",
        "ffreep",
        "fstpnce",
        "fcom",
        "fcomp",
        "fxch",
        "fstp",
        "feni",
        "feni8087_nop",
        "fdisi",
        "fdisi8087_nop",
        "fsetpm",
        "fsetpm287_nop",
      )
  },
});
